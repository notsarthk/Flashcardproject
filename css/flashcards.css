/* Main container */
.flashcard-container {
    max-width: 800px;
    margin: 2rem auto;
    padding: 2rem;
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* Progress tracking */
.progress-container {
    width: 100%;
    max-width: 600px;
    margin: 20px auto;
    background: var(--card-bg);
    border-radius: 10px;
    padding: 15px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.progress-bar {
    height: 10px;
    background: var(--accent-gradient);
    border-radius: 5px;
    transition: width 0.3s ease;
}

.progress-stats {
    display: flex;
    justify-content: space-between;
    margin-top: 10px;
    color: var(--text-primary);
    font-size: 0.9em;
}

.progress-stats span {
    background: rgba(255, 255, 255, 0.1);
    padding: 5px 10px;
    border-radius: 5px;
}

/* Flashcard */
.flashcard {
    margin: 2rem auto;
    width: 100%;
    max-width: 600px;
    height: 400px;
    cursor: pointer;
    position: relative;
    perspective: 1000px;
}

.card-inner {
    position: relative;
    width: 100%;
    height: 100%;
    text-align: center;
    transition: transform 0.6s;
    transform-style: preserve-3d;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
    border-radius: 20px;
    background: var(--card-bg);
    backdrop-filter: blur(10px);
    border: 1px solid var(--card-border);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

/* Card flip animation */
.flashcard.is-flipped .card-inner {
    transform: rotateY(180deg);
}

.flashcard.is-flipped .card-back {
    display: flex;
    transform: rotateY(180deg);
    z-index: 2;
}

.flashcard.is-flipped .card-front {
    display: none;
    z-index: 1;
}

/* Card faces */
.card-front, .card-back {
    position: absolute;
    width: 100%;
    height: 100%;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
    font-size: 1.5rem;
    border-radius: 20px;
    transition: transform 0.6s ease, opacity 0.6s ease;
}

.card-front {
    background: var(--card-gradient);
    color: var(--text-primary);
    z-index: 2;
    transform: rotateY(0deg);
    opacity: 1;
}

.card-back {
    background: var(--card-gradient);
    color: var(--text-primary);
    z-index: 1;
    transform: rotateY(180deg);
    opacity: 0;
}

/* Card flip states */
.flashcard.is-flipped .card-front {
    transform: rotateY(-180deg);
    opacity: 0;
}

.flashcard.is-flipped .card-back {
    transform: rotateY(0deg);
    opacity: 1;
    z-index: 2;
}

/* Card content */
.card-content {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    padding: 1rem;
    color: var(--text-primary);
}

/* Action buttons */
.action-buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
    margin: 2rem 0;
    width: 100%;
    max-width: 600px;
    z-index: 1;
}

.action-btn {
    padding: 1rem 2rem;
    border: none;
    border-radius: 12px;
    font-size: 1.1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    color: white;
    flex: 1;
    max-width: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
}

.know-btn {
    background: var(--accent-gradient);
    box-shadow: 0 4px 15px var(--hover-glow);
}

.dont-know-btn {
    background: linear-gradient(135deg, var(--hard-color), #ff4b2b);
    box-shadow: 0 4px 15px rgba(255, 65, 108, 0.3);
}

/* Navigation buttons */
.next-btn, .retry-btn {
    display: none;
    padding: 1rem 2rem;
    color: white;
    border: none;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 1.1rem;
    margin: 2rem auto;
    width: auto;
    text-align: center;
}

.next-btn {
    background: var(--accent-gradient);
    box-shadow: 0 4px 15px var(--hover-glow);
}

.retry-btn {
    background: linear-gradient(135deg, var(--medium-color), #f7971e);
    box-shadow: 0 4px 15px rgba(224, 175, 104, 0.3);
}

/* End of difficulty buttons */
.end-of-difficulty-buttons {
    display: none;
    flex-direction: column;
    gap: 1rem;
    margin-top: 2rem;
    width: 100%;
    max-width: 400px;
}

.start-again-btn, .next-difficulty-btn {
    padding: 1rem 2rem;
    border: none;
    border-radius: 12px;
    font-size: 1.1rem;
    cursor: pointer;
    transition: all 0.3s ease;
    color: white;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    width: 100%;
}

.start-again-btn {
    background: var(--accent-gradient);
    box-shadow: 0 4px 15px var(--hover-glow);
}

.next-difficulty-btn {
    background: linear-gradient(135deg, var(--medium-color), #f7971e);
    box-shadow: 0 4px 15px rgba(224, 175, 104, 0.3);
}

/* Button hover effects */
.action-btn:hover, .next-btn:hover, .retry-btn:hover, .start-again-btn:hover, .next-difficulty-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 6px 20px var(--active-glow);
}

/* Confetti animation */
.confetti-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1000;
    display: none;
}

.confetti {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: #f00;
    animation: confetti-fall linear forwards;
}

@keyframes confetti-fall {
    0% {
        transform: translateY(-100vh) rotate(0deg);
        opacity: 1;
    }
    100% {
        transform: translateY(100vh) rotate(720deg);
        opacity: 0;
    }
}

/* Responsive design */
@media (max-width: 768px) {
    .flashcard {
        height: 300px;
    }

    .card-front, .card-back {
        font-size: 1.2rem;
        padding: 1rem;
    }

    .action-buttons {
        flex-direction: column;
        align-items: center;
    }

    .action-btn {
        width: 100%;
        max-width: 300px;
    }
}

/* Card back text mirroring */
.card-back .mirrored-text {
    display: inline-block;
    transform: scaleX(-1);
}

/* Answer Input */
.answer-input-container {
    display: none;
    margin: 2rem 0;
    text-align: center;
    width: 100%;
    max-width: 600px;
}

.answer-input {
    width: 100%;
    padding: 1rem;
    font-size: 1.1rem;
    border: 2px solid rgba(255, 255, 255, 0.2);
    border-radius: 12px;
    margin-bottom: 1rem;
    background: rgba(255, 255, 255, 0.1);
    color: white;
    backdrop-filter: blur(10px);
}

.answer-input::placeholder {
    color: rgba(255, 255, 255, 0.5);
}

.answer-input:focus {
    outline: none;
    border-color: #00b09b;
    box-shadow: 0 0 15px rgba(0, 176, 155, 0.3);
}

.submit-answer-btn {
    padding: 1rem 2rem;
    background: linear-gradient(135deg, #00b09b, #96c93d);
    color: white;
    border: none;
    border-radius: 12px;
    cursor: pointer;
    transition: all 0.3s ease;
    font-size: 1.1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    margin: 0 auto;
    box-shadow: 0 4px 15px rgba(0, 176, 155, 0.3);
}

/* Try Again Container */
.try-again-container {
    display: none;
    text-align: center;
    margin: 2rem 0;
    width: 100%;
    max-width: 600px;
}

/* Loading State */
.flashcard.loading .card-inner {
    animation: pulse 1.5s infinite;
}

@keyframes pulse {
    0% {
        opacity: 0.6;
    }
    50% {
        opacity: 1;
    }
    100% {
        opacity: 0.6;
    }
}

.flashcard.loading .card-content {
    color: var(--text-secondary);
}

/* Disable interactions during loading */
.flashcard.loading {
    pointer-events: none;
}

/* Progress Indicator */
.progress-indicator {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: var(--card-bg);
    padding: 0.5rem 1rem;
    border-radius: 20px;
    font-size: 0.9rem;
    color: var(--text-secondary);
    border: 1px solid var(--card-border);
    backdrop-filter: blur(5px);
}

.progress-indicator span {
    color: var(--text-primary);
    font-weight: 600;
}

/* Error States */
.error-message {
    position: fixed;
    top: 1rem;
    left: 50%;
    transform: translateX(-50%);
    background: var(--hard-color);
    color: white;
    padding: 1rem 2rem;
    border-radius: 12px;
    font-size: 1rem;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
    z-index: 1000;
    box-shadow: 0 4px 15px rgba(247, 118, 142, 0.3);
}

.error-message.show {
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(0);
}

.error-message i {
    margin-right: 0.5rem;
} 